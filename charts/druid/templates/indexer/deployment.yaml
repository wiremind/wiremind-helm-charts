{{- if .Values.indexer.enabled }}

{{- range $categoryrName, $categoryValue := .Values.indexer.categories }}

{{- if eq $categoryValue.mode "Deployment" }}

{{- $indexerDefaults := $.Values.indexer.defaults }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "druid.indexer.fullname" (dict "categoryrName" $categoryrName "context" $) }}
  labels:
{{ include "druid.common-labels" $ | indent 4 }}
    app.kubernetes.io/part-of: indexer
    app.kubernetes.io/component: indexer-{{ $categoryrName }}
spec:
  replicas: {{ if not (kindIs "invalid" $categoryValue.replicaCount) }}{{ $categoryValue.replicaCount }}{{ else }}{{ $indexerDefaults.replicaCount }}{{ end }}
  selector:
    matchLabels:
{{ include "druid.common-matchLabels" $ | indent 6 }}
      app.kubernetes.io/part-of: indexer
      app.kubernetes.io/component: indexer-{{ $categoryrName }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
{{ include "druid.common-labels" $ | indent 8 }}
        app.kubernetes.io/part-of: indexer
        app.kubernetes.io/component: indexer-{{ $categoryrName }}
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") $ | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") $ | sha256sum }}
        checksum/configmap-indexers: {{ include (print $.Template.BasePath "/indexer/configmap.yaml") $ | sha256sum }}
        checksum/secret-indexers: {{ include (print $.Template.BasePath "/indexer/secret.yaml") $ | sha256sum }}
{{- with $categoryValue.podAnnotations }}
{{ toYaml . | indent 8 }}
{{- end }}
    spec:
      nodeSelector:
{{- if $categoryValue.nodeSelector }}
{{ toYaml $categoryValue.nodeSelector | indent 8 }}
{{- else }}
{{ toYaml $indexerDefaults.nodeSelector | indent 8 }}
{{- end }}
    {{- with $indexerDefaults.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with $indexerDefaults.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      {{- if $indexerDefaults.priorityClassName }}
      priorityClassName: {{ $indexerDefaults.priorityClassName }}
      {{- end }}
      containers:
      - name: indexer
        image: "{{ $.Values.image.repository }}:{{ $.Values.image.tag | default $.Chart.AppVersion }}"
        imagePullPolicy: {{ $.Values.image.pullPolicy | quote }}
        args: [ "middleManager" ]
        env:
          - name: druid_extensions_loadList
            value: {{ $.Values.extensions.loadList | toJson | quote }}
        envFrom:
          - configMapRef:
              name: {{ include "druid.fullname" $ }}-config
          - secretRef:
              name: {{ include "druid.fullname" $ }}-config
          - configMapRef:
              name: {{ include "druid.fullname" $ }}-indexer-config
          - secretRef:
              name: {{ include "druid.fullname" $ }}-indexer-config
          - configMapRef:
              name: {{ include "druid.indexer.fullname" (dict "categoryrName" $categoryrName "context" $) }}-config
          - secretRef:
              name: {{ include "druid.indexer.fullname" (dict "categoryrName" $categoryrName "context" $) }}-config
        resources:
{{- if $categoryValue.resources }}
{{ toYaml $categoryValue.resources | indent 10 }}
{{- else }}
{{ toYaml $indexerDefaults.resources | indent 10 }}
{{- end }}
        livenessProbe:
          initialDelaySeconds: 10
          httpGet:
            path: /status/health
            port: 8091
        readinessProbe:
          initialDelaySeconds: 10
          httpGet:
            path: /status/health
            port: 8091
        ports:
          - containerPort: 8091
            name: http
          {{- if .Values.metrics.enabled }}
          - name: http-metrics
            containerPort: {{ .Values.metrics.service.port }}
            protocol: TCP
          {{- end }}
        volumeMounts:
          - mountPath: /opt/druid/var
            name: data
      volumes:
        - name: data
          emptyDir:
            # medium: Memory
            sizeLimit: "{{ $categoryValue.emptyDir.size }}"
      securityContext:
          fsGroup: 1000

---

{{- end }}

{{- end }}

{{- end }}
