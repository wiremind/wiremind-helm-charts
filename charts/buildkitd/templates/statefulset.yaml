kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: {{ include "buildkitd.fullname" . }}
  labels:
    {{- include "buildkitd.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  serviceName: {{ include "buildkitd.fullname" . }}
  selector:
    matchLabels:
      {{- include "buildkitd.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "buildkitd.selectorLabels" . | nindent 8 }}
      annotations:
        container.apparmor.security.beta.kubernetes.io/buildkitd: unconfined
    spec:
      securityContext:
        # To change UID/GID, you need to rebuild the image
        fsGroup: {{ .Values.user.uid }}
      volumes:
        - name: {{ include "buildkitd.fullname" . }}
          persistentVolumeClaim:
            claimName: {{ include "buildkitd.fullname" . }}
        - name: config
          configMap:
            defaultMode: 420
            name: {{ include "buildkitd.fullname" . }}
      initContainers:
        - name: init
          image: busybox:latest
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ['sh', '-c', "chown -R {{ .Values.user.uid }}:{{ .Values.user.gid }} /tmp/buildkit"]
          volumeMounts:
            - name: {{ include "buildkitd.fullname" . }}
              mountPath: "/tmp/buildkit"
      containers:
        - name: buildkitd
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "buildkitd.fullname" . }}-env-vars
          volumeMounts:
            # Dockerfile has `VOLUME /home/user/.local/share/buildkit` by
            # default too, but the default VOLUME does not work with rootless
            # on Google's Container-Optimized OS as it is mounted with
            # `nosuid,nodev`.
            # https://github.com/moby/buildkit/issues/879#issuecomment-1240347038
            - name: {{ include "buildkitd.fullname" . }}
              mountPath: /home/{{ .Values.user.name }}/.local/share/buildkit
            - name: config
              mountPath: /home/{{ .Values.user.name }}/.config/buildkit
          args:
            {{- with .Values.extraArgs }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          ports:
            - name: tcp
              containerPort: {{ .Values.config.port }}
              protocol: TCP
          env:
            - name: NO_COLOR
              value: "true"
            {{- with .Values.resources }}
            {{- with .limits }}
            {{- with .cpu }}
            - name: GOMAXPROCS
              value: {{ . | quote }}
            {{- end }}
            {{- end }}
            {{- end }}
            {{- range $key, $value := .Values.env }}
            - name: {{ $key | quote }}
              value: {{ $value | quote }}
            {{- end }}
          {{- if .Values.resources }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          livenessProbe:
            exec:
              command:
                - buildctl
                - debug
                - workers
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          readinessProbe:
            exec:
              command:
                - buildctl
                - debug
                - workers
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          securityContext:
            seccompProfile:
              type: Unconfined
            runAsUser: {{ .Values.user.uid }}
            runAsGroup:  {{ .Values.user.gid }}
            fsGroup: {{ .Values.user.uid }}
            {{- with .Values.extraSecurityContext }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
