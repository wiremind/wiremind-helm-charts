{{- if and .Values.metrics.enabled .Values.metrics.prometheusRule.enabled }}
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  # Hardcoded https://github.com/vmuzikar/keycloak-operator/blob/5179ed73897d0be4c55e1e0a766c9fbbd39b17e8/pkg/model/prometheus_rule.go#L129
  name: "keycloak"
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "keycloak-operator.labels" . | nindent 4 }}
spec:
  groups:
    - name: {{ template "keycloak-operator.fullname" . }}.rules
      rules:
        {{- if .Values.metrics.prometheusRule.defaultRules.create }}
        {{- if not (has "KeycloakJavaNonHeapThresholdExceeded" .Values.metrics.prometheusRule.defaultRules.disabled | default false) }}
        - alert: KeycloakJavaNonHeapThresholdExceeded
          annotations:
            message: >-
              {{`{{`}} printf "%0.0f" $value {{`}}`}}% nonheap usage of {{`{{`}} $labels.area {{`}}`}}
              in pod {{`{{`}} $labels.pod {{`}}`}}, namespace {{`{{`}} $labels.namespace {{`}}`}}.
          expr: >-
            100 *
            jvm_memory_bytes_used{area="nonheap",namespace="{{ .Release.Namespace }}"} /
            jvm_memory_bytes_max{area="nonheap",namespace="{{ .Release.Namespace }}"} >
            90
          for: 1m
          labels:
            severity: warning
        {{- end }}
        {{- if not (has "KeycloakJavaGCTimePerMinuteScavenge" .Values.metrics.prometheusRule.defaultRules.disabled | default false) }}
        - alert: KeycloakJavaGCTimePerMinuteScavenge
          annotations:
            message: >-
              Amount of time per minute spent on garbage collection of 
              {{`{{`}} $labels.area {{`}}`}} in pod {{`{{`}} $labels.pod {{`}}`}},
              namespace {{`{{`}} $labels.namespace {{`}}`}} exceeds 90%. This could indicate that the
              available heap memory is insufficient.
          expr: >-
            increase(jvm_gc_collection_seconds_sum{gc="PSScavenge",
            namespace="{{ .Release.Namespace }}"}[1m]) > 1 * 60 * 0.9
          for: 1m
          labels:
            severity: warning
        {{- end }}
        {{- if not (has "KeycloakJavaGCTimePerMinuteMarkSweep" .Values.metrics.prometheusRule.defaultRules.disabled | default false) }}
        - alert: KeycloakJavaGCTimePerMinuteMarkSweep
          annotations:
            message: >-
              Amount of time per minute spent on garbage collection of 
              {{`{{`}} $labels.area {{`}}`}} in pod {{`{{`}} $labels.pod {{`}}`}},
              namespace {{`{{`}} $labels.namespace {{`}}`}} exceeds 90%. This could indicate that the
              available heap memory is insufficient.
          expr: >-
            increase(jvm_gc_collection_seconds_sum{gc="PSMarkSweep",
            namespace="{{ .Release.Namespace }}"}[1m]) > 1 * 60 * 0.9
          for: 1m
          labels:
            severity: warning
        {{- end }}
        {{- if not (has "KeycloakJavaDeadlockedThreads" .Values.metrics.prometheusRule.defaultRules.disabled | default false) }}
        - alert: KeycloakJavaDeadlockedThreads
          annotations:
            message: >-
              Number of threads in deadlock state of {{`{{`}} $labels.area {{`}}`}} in pod
              {{`{{`}} $labels.pod {{`}}`}}, namespace {{`{{`}} $labels.namespace {{`}}`}}
          expr: jvm_threads_deadlocked{namespace="{{ .Release.Namespace }}"} > 0
          for: 1m
          labels:
            severity: warning
        {{- end }}
        {{- if not (has "KeycloakLoginFailedThresholdExceeded" .Values.metrics.prometheusRule.defaultRules.disabled | default false) }}
        - alert: KeycloakLoginFailedThresholdExceeded
          annotations:
            message: >-
              More than 50 failed login attempts for realm {{`{{`}} $labels.realm {{`}}`}},
              provider {{`{{`}} $labels.provider {{`}}`}}, namespace {{`{{`}} $labels.namespace {{`}}`}}
              over the last 5 minutes. (Rate of {{`{{`}} printf "%0f" $value {{`}}`}})
          expr: >-
            rate(keycloak_failed_login_attempts{namespace="{{ .Release.Namespace }}"}[5m])
            * 300 > 50
          for: 5m
          labels:
            severity: warning
        {{- end }}
        {{- if not (has "KeycloakInstanceNotAvailable" .Values.metrics.prometheusRule.defaultRules.disabled | default false) }}
        - alert: KeycloakInstanceNotAvailable
          annotations:
            message: >-
              Keycloak instance in namespace {{`{{`}} $labels.namespace {{`}}`}} has not
              been available for the last 5 minutes.
          expr: >-
            (1 - absent(kube_pod_status_ready{namespace="{{ .Release.Namespace }}",
            condition="true"} * on (pod) group_left (label_component)
            kube_pod_labels{label_component="keycloak",
            namespace="{{ .Release.Namespace }}"})) == 0
          for: 5m
          labels:
            severity: critical
        {{- end }}
        {{- if not (has "KeycloakAPIRequestDuration90PercThresholdExceeded" .Values.metrics.prometheusRule.defaultRules.disabled | default false) }}
        - alert: KeycloakAPIRequestDuration90PercThresholdExceeded
          annotations:
            message: >-
              More than 10% the RH SSO API endpoints in namespace
              {{`{{`}} $labels.namespace {{`}}`}} are taking longer
              than 1s for the last 5 minutes.
          expr: >-
            (sum(rate(keycloak_request_duration_bucket{le="1000.0",
            namespace="{{ .Release.Namespace }}"}[5m])) by (job) /
            sum(rate(keycloak_request_duration_count{namespace="{{ .Release.Namespace }}"}[5m]))
            by (job)) < 0.90
          for: 5m
          labels:
            severity: warning
        {{- end }}
        {{- if not (has "KeycloakAPIRequestDuration99.5PercThresholdExceeded" .Values.metrics.prometheusRule.defaultRules.disabled | default false) }}
        - alert: KeycloakAPIRequestDuration99.5PercThresholdExceeded
          annotations:
            message: >-
              More than 0.5% of the RH SSO API endpoints in namespace
              {{`{{`}} $labels.namespace {{`}}`}} are taking longer
              than 10s for the last 5 minutes.
          expr: >-
            (sum(rate(keycloak_request_duration_bucket{le="10000.0",
            namespace="{{ .Release.Namespace }}"}[5m])) by (job) /
            sum(rate(keycloak_request_duration_count{namespace="{{ .Release.Namespace }}"}[5m]))
            by (job)) < 0.995
          for: 5m
          labels:
            severity: warning
        {{- end }}

        {{- if not (hasKey .Values.keycloak "externalDatabase") }}
        {{- if not (has "KeycloakDatabaseNotAvailable" .Values.metrics.prometheusRule.defaultRules.disabled | default false) }}
        - alert: KeycloakDatabaseNotAvailable
          annotations:
            message: >-
              RH SSO database in namespace {{`{{`}} $labels.namespace {{`}}`}} 
              is not available for the last 5 minutes.
          expr: >-
            (1 - absent(kube_pod_status_ready{namespace="{{ .Release.Namespace }}", condition="true"} 
            * on (pod) group_left (label_component) kube_pod_labels{label_component="database", 
            namespace="{{ .Release.Namespace }}"})) == 0
          for: 5m
          labels:
            severity: critical
        {{- end }}
        {{- end }}

        {{- end }}

        {{- if .Values.metrics.prometheusRule.additionalRules }}
{{- toYaml .Values.metrics.prometheusRule.additionalRules | nindent 8 }}
        {{- end }}
{{- end }}
