kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: {{ include "koherence.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "koherence.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "koherence.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "koherence.selectorLabels" . | nindent 8 }}
    spec:
      volumes:
        - name: {{ .Release.Name }}-script
          configMap :
            name: {{ .Release.Name }}-script
            defaultMode: 0744
        - name: host-run-{{ .Release.Name }}
          hostPath:
            path: /run/koherence
            type: DirectoryOrCreate
      containers:
        - name: {{ include "koherence.name" . }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag | default (printf "v%s" .Chart.AppVersion) }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /run/koherence/main.sh
          volumeMounts:
            - name: {{ .Release.Name }}-script
              mountPath: /tmp/script
            - name: host-run-{{ .Release.Name }}
              mountPath: /run/koherence
          env:
            - name: NO_COLOR
              value: "true"
            {{- with .Values.resources }}
            {{- with .limits }}
            - name: GOMAXPROCS
              value: {{ .cpu | quote }}
            {{- end }}
            {{- end }}
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-env
            - secretRef:
                name: {{ .Release.Name }}-provider-env
          {{- if .Values.resources }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          {{- with .Values.containerSecurityContext }}
          securityContext: {{- toYaml . | nindent 10 }}
          {{- end }}
          livenessProbe:
            exec:
              command:
                - koherence --version
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          readinessProbe:
            exec:
              command:
                - koherence --version
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          startupProbe:
            exec:
              command:
                - koherence --version
            failureThreshold: {{ .Values.startupProbe.retries }}
            periodSeconds: 1
      {{- with .Values.securityContext }}
      securityContext: {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      {{- with .Values.hostPID }}
      hostPID: {{ toYaml . }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 0
  revisionHistoryLimit: 10
