{{- if .Values.router.enabled }}

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "druid.router.fullname" . }}
  labels:
    {{- include "druid.common-labels" . | nindent 4 }}
    app.kubernetes.io/component: {{ .Values.router.name }}
  {{- with .Values.router.annotations }}
  annotations: {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.router.autoscaling.enabled }}
  replicas: {{ .Values.router.replicaCount }}
  {{- end }}
  podManagementPolicy: {{ .Values.router.podManagementPolicy }}
  serviceName: {{ include "druid.router.fullname" . }}
  updateStrategy: {{- toYaml .Values.router.updateStrategy | nindent 4 }}
  selector:
    matchLabels:
      {{- include "druid.common-matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: {{ .Values.router.name }}
  template:
    metadata:
      labels:
        {{- include "druid.common-labels" . | nindent 8 }}
        app.kubernetes.io/component: {{ .Values.router.name }}
        druid.k8s.enablePatching: "true"
        {{- with .Values.router.podLabels }}
        {{ toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") $ | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") $ | sha256sum }}
        checksum/configmap-router: {{ include (print $.Template.BasePath "/router/configmap.yaml") $ | sha256sum }}
        checksum/secret-router: {{ include (print $.Template.BasePath "/router/secret.yaml") $ | sha256sum }}
        {{- with .Values.router.podAnnotations }}
        {{ toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.router.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.router.affinity }}
      affinity: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.router.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.router.podSecurityContext }}
      securityContext: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.router.priorityClassName }}
      priorityClassName: {{ . }}
      {{- end }}
      {{- if .Values.router.serviceAccount.create }}
      serviceAccountName: {{ include "druid.router.serviceAccountName" . }}
      {{- end }}
      containers:
        - name: {{ include "druid.router.fullname" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.router.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.router.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          args: [ "router" ]
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            {{- if hasKey .Values.router.service "resolveWithDNS" | ternary .Values.router.service.resolveWithDNS .Values.service.resolveWithDNS }}
            - name: druid_host
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            {{- end }}
            - name: druid_extensions_loadList
              value: {{ .Values.extensions.loadList | toJson | quote }}
            {{- with (include "tiertobroker.map" .) }}
            - name: druid_router_tierToBrokerMap
              value: {{ printf "'{%s}'" . }}
            {{- end }}
          envFrom:
            - configMapRef:
                name: {{ include "druid.fullname" . }}-config
            - configMapRef:
                name: {{ include "druid.router.fullname" . }}-config
            - secretRef:
                name: {{ include "druid.fullname" . }}-config
            - secretRef:
                name: {{ include "druid.router.fullname" . }}-config
          ports:
            - name: http
              containerPort: {{ .Values.router.port }}
              protocol: TCP
            {{- if .Values.metrics.enabled }}
            - name: http-metrics
              containerPort: {{ .Values.metrics.service.port }}
              protocol: TCP
            {{- end }}
          {{- if .Values.router.livenessProbe.enabled }}
          livenessProbe: {{- omit .Values.router.livenessProbe "enabled" | toYaml | nindent 12 }}
            httpGet:
              path: /status/health
              port: http
          {{- end }}
          {{- if .Values.router.readinessProbe.enabled }}
          readinessProbe: {{- omit .Values.router.readinessProbe "enabled" | toYaml | nindent 12 }}
            httpGet:
              path: /status/selfDiscovered
              port: http
          {{- end }}
          {{- with .Values.router.resources }}
          resources: {{- toYaml . | nindent 12 }}
          {{- end }}

{{- end }}
