kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: {{ include "buildkitd.fullname" . }}
  labels:
    {{- include "buildkitd.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  serviceName: {{ include "buildkitd.fullname" . }}
  selector:
    matchLabels:
      {{- include "buildkitd.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "buildkitd.selectorLabels" . | nindent 8 }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: {{ .Values.config.debugPort | quote }}
        container.apparmor.security.beta.kubernetes.io/buildkitd: unconfined
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      securityContext:
        # To change UID/GID, you need to rebuild the image
        fsGroup: {{ .Values.user.uid }}
        # Set this to avoid massive cascading chown on restart
        fsGroupChangePolicy: "OnRootMismatch"
      volumes:
        - name: config
          configMap:
            defaultMode: 420
            name: {{ include "buildkitd.fullname" . }}
        - name: runtime-dir
          emptyDir:
            medium: Memory
            sizeLimit: 1Gi
        {{- if eq "slice" (kindOf .Values.config.registries) }}
        - name: registry-certs
          configMap:
            defaultMode: 420
            name: {{ include "buildkitd.fullname" . }}-registry-ca-certs
        {{- end }}
      containers:
        - name: buildkitd
          image: {{ .Values.image.repository }}:{{ .Values.image.tag | default (printf "v%s-rootless" .Chart.AppVersion) }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "buildkitd.fullname" . }}-env-vars
          volumeMounts:
            # Dockerfile has `VOLUME /home/user/.local/share/buildkit` by
            # default too, but the default VOLUME does not work with rootless
            # on Google's Container-Optimized OS as it is mounted with
            # `nosuid,nodev`.
            # https://github.com/moby/buildkit/issues/879#issuecomment-1240347038
            - name: {{ include "buildkitd.fullname" . }}
              mountPath: /home/{{ .Values.user.name }}/.local/share/buildkit
            - name: config
              mountPath: /home/{{ .Values.user.name }}/.config/buildkit
            - name: runtime-dir
              mountPath: /run/{{ .Values.user.name }}/{{ .Values.user.uid }}
            {{- if eq "slice" (kindOf .Values.config.registries) }}
            - name: registry-certs
              mountPath: /etc/ssl/private
            {{- end }}
          args:
            {{- with .Values.extraArgs }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          ports:
            - name: tcp
              containerPort: {{ .Values.config.port }}
              protocol: TCP
            - name: debug
              containerPort: {{ .Values.config.debugPort }}
              protocol: TCP
          env:
            - name: NO_COLOR
              value: "true"
            {{- with .Values.resources }}
            {{- with .limits }}
            {{- with .cpu }}
            - name: GOMAXPROCS
              value: {{ . | quote }}
            {{- end }}
            {{- end }}
            {{- end }}
            {{- range $key, $value := .Values.env }}
            - name: {{ $key | quote }}
              value: {{ $value | quote }}
            {{- end }}
          {{- if .Values.resources }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          livenessProbe:
            exec:
              command:
                - buildctl
                - debug
                - workers
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          readinessProbe:
            exec:
              command:
                - buildctl
                - debug
                - workers
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          startupProbe:
            exec:
              command:
                - buildctl
                - debug
                - workers
            failureThreshold: {{ .Values.startupProbe.retries }}
            periodSeconds: 1
          securityContext:
            capabilities:
              add:
                - CHOWN
                - DAC_OVERRIDE
                - FOWNER
                - FSETID
                - SETGID
                - SETUID
                - SETFCAP
              drop:
                - ALL
            # allowPrivilegeEscalation has to be true for initializing the user
            # namespace with newuidmap setuid binary.
            allowPrivilegeEscalation: true
            # It needs to create some local files in /home/user/.local
            readOnlyRootFilesystem: false
            seccompProfile:
              type: Unconfined
            privileged: false
            runAsNonRoot: true
            runAsUser: {{ .Values.user.uid }}
            runAsGroup:  {{ .Values.user.gid }}
            {{- with .Values.extraSecurityContext }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with .Values.lifecycle }}
          lifecycle:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
  volumeClaimTemplates:
    - kind: PersistentVolumeClaim
      apiVersion: v1
      metadata:
        name: {{ include "buildkitd.fullname" . }}
        namespace: {{ .Release.Namespace }}
        labels:
          app: {{ template "buildkitd.fullname" . }}
          chart: {{ .Chart.Name }}-{{ .Chart.Version }}
          release: {{ .Release.Name }}
          heritage: {{ .Release.Service }}
      spec:
        accessModes:
          - {{ .Values.persistence.accessModes | quote }}
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
        storageClassName: {{ .Values.persistence.storageClass }}
        volumeMode: Filesystem
