{{- if and .Values.postgresql.enabled .Values.postgresql.backup.s3.enabled }}
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ include "druid.postgresql-s3-backup.fullname" . }}
  labels:
{{ include "druid.common-labels" . | indent 4 }}
    app.kubernetes.io/component: {{ .Values.postgresql.backup.s3.name }}
spec:
  schedule: "0 12 * * *"
  startingDeadlineSeconds: 600
  concurrencyPolicy: "Forbid"
  failedJobsHistoryLimit: 1
  successfulJobsHistoryLimit: 1
  jobTemplate:
    spec:
      backoffLimit: 1
      template:
        metadata:
          labels:
{{ include "druid.common-labels" . | indent 12 }}
            app.kubernetes.io/component: {{ .Values.postgresql.backup.s3.name }}
            # logFormat: json
{{- with .Values.postgresql.backup.podAnnotations }}
          annotations:
{{ toYaml . | indent 12 }}
{{- end }}
        spec:
          {{- if .Values.postgresql.backup.s3.priorityClassName }}
          priorityClassName: {{ .Values.postgresql.backup.s3.priorityClassName }}
          {{- end }}
          restartPolicy: Never
          imagePullSecrets:
            - name: gitlab-docker-registry
          containers:
            - name: job
              image: bitnami/postgresql:{{ .Values.postgresql.image.tag }}
              command: [ "/bin/bash" ]
              args: [ "/backup.sh" ]
              envFrom:
              - secretRef:
                  name: {{ include "druid.postgresql-s3-backup.fullname" . }}
              resources:
{{ toYaml .Values.postgresql.backup.s3.resources | indent 16 }}
              volumeMounts:
                - name: config
                  mountPath: /backup.sh
                  subPath: backup.sh
          securityContext:
            runAsUser: 0
            fsGroup: 0
{{- with .Values.postgresql.backup.s3.nodeSelector }}
          nodeSelector:
{{ toYaml . | indent 12 }}
{{- end }}
{{- with .Values.postgresql.backup.s3.affinity }}
          affinity:
{{ toYaml . | indent 12 }}
{{- end }}
{{- with .Values.postgresql.backup.s3.tolerations }}
          tolerations:
{{ toYaml . | indent 12 }}
{{- end }}
          volumes:
            - name: config
              configMap:
                name: {{ include "druid.postgresql-s3-backup.fullname" . }}
                defaultMode: 420
{{- end }}
