{{- if .Values.backup.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "elasticsearch-cluster.fullname" . }}-setup-backup-repo
  labels:
{{ include "elasticsearch-cluster.labels" . | indent 4 }}
  annotations:
    "helm.sh/hook": post-install, post-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": "before-hook-creation, hook-succeeded"
spec:
  backoffLimit: 2
  template:
    metadata:
      labels:
{{ include "elasticsearch-cluster.labels" . | indent 8 }}
    spec:
      priorityClassName: {{ .Values.backup.priorityClassName }}
      restartPolicy: Never
      initContainers:
        - name: wait-for-elasticsearch
          image: curlimages/curl:7.68.0
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
            - -c
            - >
              until curl -S "{{ include "elasticsearch-cluster.elasticsearch-url" . }}/_cluster/health?wait_for_status=yellow&timeout=50s";
              do
                echo "Waiting for elasticsearch";
                sleep 2;
              done;
      containers:
        - name: elasticsearch-create-backup-repo
          image: curlimages/curl:7.68.0
          imagePullPolicy: IfNotPresent
          env:
            - name: SERVER_URL
              value: {{ include "elasticsearch-cluster.elasticsearch-url" . }}
            - name: REPOSITORY_NAME
              value: {{ .Values.backup.snapshotPolicy.repository }}
            - name: SNAPSHOT_POLICY_NAME
              value: {{ .Values.backup.snapshotPolicyName }}
          command:
            - /bin/sh
          args:
            - -c
            - |
              echo "Configuring the s3 repository...";
              set -x;
              cat /etc/snapshot-policy-configuration/snapshot-policy.json
              RESPONSE=$(curl -XPUT --silent --show-error -H 'Content-Type: application/json' "$SERVER_URL/_snapshot/$REPOSITORY_NAME" -d "@/etc/snapshot-policy-configuration/repository-setup.json");
              if echo "$RESPONSE" | grep error; then exit 1; fi;

              echo "Configuring snapthost policy..."
              RESPONSE=$(curl -XPUT --silent --show-error -H 'Content-Type: application/json' "$SERVER_URL/_slm/policy/$SNAPSHOT_POLICY_NAME" -d "@/etc/snapshot-policy-configuration/snapshot-policy.json");
              if echo "$RESPONSE" | grep -v '{"acknowledged":true}'; then exit 1; fi;
          volumeMounts:
            - name: snapshot-policy-configuration
              mountPath: /etc/snapshot-policy-configuration
      volumes:
        - name: snapshot-policy-configuration
          configMap:
            name: {{ include "elasticsearch-cluster.fullname" . }}-setup-backup-repo
            defaultMode: 420
      terminationGracePeriodSeconds: 0
{{- end }}
