{{- if .Values.setup.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "elasticsearch-cluster.fullname" . }}-setup
  labels:
{{ include "elasticsearch-cluster.labels" . | indent 4 }}
  {{- with .Values.setup.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  backoffLimit: 0
  ttlSecondsAfterFinished: {{ .Values.setup.ttlSecondsAfterFinished }}
  template:
    metadata:
      labels:
{{ include "elasticsearch-cluster.labels" . | indent 8 }}
    spec:
      {{- with .Values.setup.priorityClassName }}
      priorityClassName: {{ . }}
      {{- end }}
      restartPolicy: Never
      containers:
        - name: setup
          image: curlimages/curl:7.79.1
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: setup
              mountPath: /app/config
          command:
            - /bin/sh
          args:
            - -c
            - |
              echo "Configuring Elasticsearch..."
              FILES="/app/config/query-*.json"
              for f in $FILES
              do
                echo "Processing $f file..."
                export QUERY=`cat $f`
                FILENAME=`basename $f`
                CONFIG_FILENAME="${FILENAME/query-/}"
                CONFIG_FILENAME="${CONFIG_FILENAME%.*}"
                CONFIG_ENV_PATH="/app/config/config-$CONFIG_FILENAME.env"

                source $CONFIG_ENV_PATH

                if [[ "$DEBUG" == "true" ]]; then
                  set -x
                fi

                if [[ "$DEBUG" == "true" ]]; then
                  cat "$f"
                  cat $CONFIG_ENV_PATH
                fi

                while true;
                do
                  echo "Waiting for elasticsearch"
                  RESPONSE_HEALTH=`curl --silent --show-error "$ELASTICSEARCH_HOST/_cluster/health?wait_for_status=yellow&timeout=300s"`
                  if [ "$?" == "0" ]; then
                    echo $RESPONSE_HEALTH
                    break
                  else
                    echo $RESPONSE_HEALTH
                    sleep 10;
                  fi
                done;

                HEADERS_CMD=""
                echo "$HEADERS" | tr ";" '\n' | \
                {
                  CURL_CMD="curl -X $METHOD --silent --show-error"

                  while read header;
                  do
                    if [ ! -z "$header" ]; then
                      CURL_CMD="${CURL_CMD} -H \"${header}\""
                    fi
                  done

                  CURL_CMD="${CURL_CMD} \"$ELASTICSEARCH_HOST/$ENDPOINT\""

                  if [ ! -z '$QUERY' ]; then
                    QUERY_CMD=\'$QUERY\'
                    CURL_CMD="${CURL_CMD} -d $QUERY_CMD"
                  fi

                  echo "Sending request"

                  RESPONSE=`eval $CURL_CMD`

                  if echo "$RESPONSE" | grep -v '{"acknowledged":true}'; then
                    exit 1
                  else
                    echo $RESPONSE
                  fi
                }
              done
      terminationGracePeriodSeconds: {{ .Values.setup.terminationGracePeriodSeconds }}
      volumes:
        - name: setup
          configMap:
            # Provide the name of the ConfigMap containing the files you want
            # to add to the container
            name: {{ include "elasticsearch-cluster.fullname" . }}-setup
{{- end }}
