{{- range $commandKey, $commandDict := default dict .Values.deployments }}
{{- if hasKey $commandDict "enabled" | ternary $commandDict.enabled true }}
{{- $formattedCommandKey := kebabcase $commandKey}}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cluster-manager.fullname" $ }}-{{ $formattedCommandKey }}
  labels:
    app.kubernetes.io/component: cluster-manager
    {{- include "cluster-manager.labels" $ | nindent 4 }}
spec:
  replicas: {{ hasKey $commandDict "replicas" | ternary $commandDict.replicas 1 }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "cluster-manager.fullname" $ }}-{{ $formattedCommandKey }}
      app.kubernetes.io/instance: {{ $.Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "cluster-manager.fullname" $ }}-{{ $formattedCommandKey }}
        app.kubernetes.io/instance: {{ $.Release.Name }}
    spec:
      {{- if $.Values.priorityClassName }}
      priorityClassName: "{{ $.Values.priorityClassName }}"
      {{- end }}
      {{- if $commandDict.serviceAccountName }}
      serviceAccountName: "{{ $commandDict.serviceAccountName }}"
      {{- else }}
      serviceAccountName: {{ template "cluster-manager.serviceAccountName" $ }}
      {{- end }}
      {{- if $.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- range $imagePullSecret := $.Values.imagePullSecrets }}
        - name: {{ $imagePullSecret }}
        {{- end }}
      {{- end }}
      {{- with $.Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ $formattedCommandKey }}
          image: "{{ $.Values.image.repository }}:{{ $.Values.image.tag | default $.Chart.AppVersion }}"
          {{- with $commandDict.extraEnv }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if $commandDict.secretEnvVars }}
          envFrom:
            - secretRef:
                name: {{ include "cluster-manager.fullname" $ }}-{{ $formattedCommandKey }}
          {{- end }}
          command:
            - {{ $.Values.rootCommand }}
            {{- if $commandDict.command }}
            {{- toYaml $commandDict.command | nindent 12 }}
            {{- end }}
          args:
            - "--non-interactive"
          {{- if $commandDict.args }}
            {{- toYaml $commandDict.args | nindent 12 }}
          {{- end }}
          {{- if $commandDict.secretFiles }}
          volumeMounts:
            {{- range $secretFileKey, $secretFile := default dict $commandDict.secretFiles }}
            - name: {{ $secretFileKey | kebabcase }}
              mountPath: {{ $secretFile.mountPath }}
              subPath: {{ $secretFile.filename }}
            {{- end }}
          {{- end }}
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          ports:
            - name: metrics
              containerPort: {{ hasKey $.Values "metricsPort" | ternary $.Values.metricsPort 9100 }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: metrics
            timeoutSeconds: 80
            periodSeconds: 90
          readinessProbe:
            httpGet:
              path: /
              port: metrics
            timeoutSeconds: 80
            periodSeconds: 90
          resources:
            {{- if $commandDict.resources }}
            {{- toYaml $commandDict.resources | nindent 12 }}
            {{- else }}
            {{- toYaml $.Values.resources | nindent 12 }}
            {{- end }}
          {{- with $.Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- if $commandDict.secretFiles }}
      volumes:
        {{- range $secretFileKey, $secretFile := default dict $commandDict.secretFiles }}
        - name: {{ $secretFileKey | kebabcase }}
          secret:
            secretName: {{ (include "cluster-manager.fullname" $) }}-{{ $formattedCommandKey }}-{{ $secretFileKey | kebabcase }}
            items:
              - key: {{ $secretFile.filename }}
                path: {{ $secretFile.filename }}
        {{- end }}
      {{- end }}

{{- end }}
{{- end }}
