{{- if .Values.createElasticsearchToken }}
{{- if .Values.deleteElasticsearchToken }}
apiVersion: batch/v1
kind: Job
metadata:
  name: pre-delete-{{ template "kibana.fullname" . }}
  labels: {{ include "kibana.labels" . | nindent 4 }}
  annotations:
    {{ .Values.delete.annotations | toYaml | nindent 4 }}
spec:
  backoffLimit: 3
  template:
    spec:
      restartPolicy: Never
      containers:
        - name: clean-kibana-token
          image: curlimages/curl:8.11.0
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
          args:
            - -c
            - |
              ES_AUTH="$ELASTICSEARCH_USERNAME:$ELASTICSEARCH_PASSWORD"
              ES_CA="$ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES"
              ES_PATH="_security/service/elastic/kibana/credential/token/{{ template "kibana.fullname" . }}"
              ES_URL="{{ .Values.elasticsearchHosts }}/${ES_PATH}"

              K8S_CA="/run/secrets/kubernetes.io/serviceaccount/ca.crt"
              K8S_URL="https://$KUBERNETES_SERVICE_HOST:$KUBERNETES_SERVICE_PORT_HTTPS"
              K8S_BEARER=$(cat /run/secrets/kubernetes.io/serviceaccount/token)

              echo "Deleting the Kibana Elasticsearch token"
              DELETE_TOKEN_CMD="curl -k --max-time 5 --silent --show-error -X DELETE -u $ES_AUTH $ES_URL"
              if [[ "$ES_CA" != "" ]]; then
                DELETE_TOKEN_CMD="${DELETE_TOKEN_CMD} --cacert ${ES_CA}"
              fi
              DELETE_TOKEN=$($DELETE_TOKEN_CMD)
              echo $DELETE_TOKEN_CMD

              echo "Deleting K8S secret"
              secrets_response=$(curl -k --max-time 5 --silent --show-error \
                -X DELETE \
                --cacert "$K8S_CA" \
                -H "Authorization: Bearer $K8S_BEARER" \
                -H "Accept: application/json" \
                -H "Content-Type: application/json" \
                "$K8S_URL/api/v1/namespaces/{{ .Release.Namespace }}/secrets/{{ template "kibana.fullname" . }}-es-token")
          env:
            - name: "ELASTICSEARCH_USERNAME"
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.elasticsearchCredentialSecret }}
                  key: username
            - name: "ELASTICSEARCH_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.elasticsearchCredentialSecret }}
                  key: password
            - name: ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES
              value: "/certs/{{ .Values.elasticsearchCertificateAuthoritiesFile }}"
          volumeMounts:
            {{- if .Values.elasticsearchCertificateSecret }}
            - name: elasticsearch-certs
              mountPath: /certs
              readOnly: true
            {{- end }}
      serviceAccount: pre-delete-{{ template "kibana.fullname" . }}
      volumes:
        {{- if .Values.elasticsearchCertificateSecret }}
        - name: elasticsearch-certs
          secret:
            secretName: {{ .Values.elasticsearchCertificateSecret }}
            optional: true
        {{- end }}
{{- end }}
{{- end }}
