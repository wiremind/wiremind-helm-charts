# Default values for docker-hub-rate-limit-exporter.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

config:
    # Log level of the exporter
    verbosity: 1
    dockerhub:
        username: ""
        password: ""

deployment:
    enabled: false
    replicaCount: 1

daemonset:
    enabled: true
    updateStrategy:
        type: RollingUpdate
        rollingUpdate:
            maxUnavailable: 1

image:
    repository: viadee/docker-hub-rate-limit-exporter
    tag: ""
    pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceMonitor:
    enabled: true
    additionalLabels: {}
    namespace: ""

    jobLabel: ""

    scheme: http
    bearerTokenFile:
    tlsConfig: {}

    ## proxyUrl: URL of a proxy that should be used for scraping.
    ##
    proxyUrl: ""

    ## Override serviceMonitor selector
    ##
    selectorOverride: {}

    relabelings:
        - action: replace
          sourceLabels:
              - __meta_kubernetes_pod_node_name
          targetLabel: instance
        - action: replace
          sourceLabels:
              - __meta_kubernetes_pod_host_ip
          targetLabel: host_ip
    metricRelabelings: []
    interval: ""
    scrapeTimeout: 25s

serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

podAnnotations:
    sidecar.istio.io/inject: "false"

securityContext:
    fsGroup: 65534
    runAsGroup: 65534
    runAsNonRoot: true
    runAsUser: 65534

containerSecurityContext:
    capabilities:
        add:
        - SYS_TIME

service:
    type: ClusterIP
    port: 9100
    targetPort: 9100
    nodePort:
    portName: metrics
    timeoutSeconds: 5
    annotations:
        prometheus.io/scrape: "true"

resources:
    limits:
        cpu: 200m
        memory: 96Mi
    requests:
        cpu: 50m
        memory: 64Mi

nodeSelector: {}

tolerations: []

priorityClassName: ""

affinity: {}

# Expose the service to the host network
hostNetwork: false

# Share the host process ID namespace
hostPID: true
