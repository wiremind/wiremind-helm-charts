{{- if .Values.configJobs.enabled }}

{{- range $jobName, $jobDefinition := .Values.configJobs.dict }}

---

apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "druid.configJobs.fullname" $ }}-{{ $jobName }}
  labels:
    {{- include "druid.common-labels" $ | nindent 4 }}
    app.kubernetes.io/component: config-job-{{ $jobName }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  backoffLimit: {{ $.Values.configJobs.backoffLimit }}
  ttlSecondsAfterFinished: {{ $.Values.configJobs.ttlSecondsAfterFinished }}
  template:
    metadata:
      labels:
        {{- include "druid.common-labels" $ | nindent 8 }}
        app.kubernetes.io/component: config-job-{{ $jobName }}
    spec:
      {{- with $.Values.configJobs.affinity }}
      affinity: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.configJobs.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.configJobs.podSecurityContext }}
      securityContext: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.configJobs.priorityClassName }}
      priorityClassName: {{ . }}
      {{- end }}
      {{- with $.Values.configJobs.restartPolicy }}
      restartPolicy: {{ . }}
      {{- end }}
      containers:
        - name: job
          image: curlimages/curl:8.5.0
          {{- if $.Values.configJobs.containerSecurityContext.enabled }}
          securityContext: {{- omit $.Values.configJobs.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          command: ["curl"]
          args:
            - "-v"
            - "--fail-with-body"
            - "--connect-timeout"
            - "5"
            - "--max-time"
            - "10"
            - "--retry-connrefused"
            - "--retry"
            - "180"
            - "--retry-delay"
            - "1"
            - "--retry-max-time"
            - "180"
            - "-X"
            - "POST"
            - {{ printf "%s://%s-%s:%d%s" $jobDefinition.component.scheme $.Release.Name $jobDefinition.component.name ($jobDefinition.component.port | int) $jobDefinition.component.route }}
            - "-H"
            - "Content-Type: application/json"
            - "-H"
            - "X-Druid-Author: config-job-{{ $jobName }}"
            - "-H"
            - "X-Druid-Comment: {{ $.Values.configJobs.changeComment | default "changed by config-job" }}"
            - "-d"
            - "@/config.json"
          {{- with $.Values.configJobs.resources }}
          resources: {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: config
              mountPath: /config.json
              subPath: config.json
      volumes:
        - name: config
          configMap:
            name: {{ include "druid.configJobs.fullname" $ }}-{{ $jobName }}
            defaultMode: 420

{{- end }}

{{- end }}
