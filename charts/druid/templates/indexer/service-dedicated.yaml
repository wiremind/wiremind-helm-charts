{{- if .Values.indexer.enabled }}

{{- range $categoryName, $categoryValue := .Values.indexer.categories }}

{{- if hasKey $categoryValue "enabled" | ternary $categoryValue.enabled true }}

{{- $categoryService := hasKey $categoryValue "service" | ternary $categoryValue.service dict }}
{{- if hasKey $categoryService "dedicated" | ternary $categoryService.dedicated $.Values.indexer.defaults.service.dedicated -}}

{{- if eq $categoryValue.mode "Deployment" }}
{{- fail "Cannot create a dedicated service with kind other than StatefulSet" }}
{{- end -}}

{{- $replicaCount := 0 }}
{{- $categoryAutoscaling := hasKey $categoryValue "autoscaling" | ternary $categoryValue.autoscaling dict }}
{{- if hasKey $categoryAutoscaling "enabled" | ternary $categoryAutoscaling.enabled false }}
{{- $replicaCount = $categoryAutoscaling.maxReplicas }}
{{- else -}}
{{- $replicaCount = hasKey $categoryValue "replicaCount" | ternary $categoryValue.replicaCount $.Values.indexer.defaults.replicaCount }}
{{- end -}}

{{- range untilStep 0 ($replicaCount | int) 1 }}

---

apiVersion: v1
kind: Service
metadata:
  name: {{ include "druid.indexer.category.fullname" (dict "categoryName" $categoryName "context" $) }}-{{ . }}
  labels:
{{ include "druid.common-labels" $ | indent 4 }}
    app.kubernetes.io/part-of: indexer
    app.kubernetes.io/component: indexer-{{ $categoryName }}
    statefulset.kubernetes.io/pod-name: {{ include "druid.indexer.category.fullname" (dict "categoryName" $categoryName "context" $) }}-{{ . }}
spec:
  type: ClusterIP
  ports:
    - port: 8091
      targetPort: http
      protocol: TCP
      name: http
  selector:
{{ include "druid.common-matchLabels" $ | indent 4 }}
    app.kubernetes.io/part-of: indexer
    app.kubernetes.io/component: indexer-{{ $categoryName }}
    statefulset.kubernetes.io/pod-name: {{ include "druid.indexer.category.fullname" (dict "categoryName" $categoryName "context" $) }}-{{ . }}

{{- end }}

{{- end }}

{{- end }}

{{- end }}

{{- end }}
