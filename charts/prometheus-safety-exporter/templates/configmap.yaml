kind: ConfigMap
apiVersion: v1
metadata:
  name: {{ include "prometheus-safety-exporter.fullname" . }}
  labels:
    {{- include "prometheus-safety-exporter.labels" $ | nindent 4 }}
data:
  generate-json.sh: |-
    #!/bin/sh
    set -e;
    set -x;

    readonly DIRNAME=$(dirname "$0");

    mkdir /tmp/json-exporter
    python3 -m http.server -b 127.0.0.1 8000 -d /tmp/json-exporter &

    # To circumvent https://github.com/pyupio/safety/blob/b56a4dc89b6364594d67386bedac0524df519327/safety/constants.py#L36C5-L36C19
    export HOME=/tmp

    # install in user mode in case the container does not run as root
    PATH=$PATH:/tmp/.local/bin
    pip install safety --user --break-system-packages

    OUTPUT="/tmp/json-exporter/results.json"

    # Avoid spamming safety in case of reboot in a loop
    sleep $((RANDOM % 3600))

    while true; do
      safety --disable-optional-telemetry check -r requirements.txt --continue-on-error --save-json $OUTPUT
      sleep $DELAY_BETWEEN_CHECKS;
    done

  json-exporter-config.yml: |
    ---
    modules:
      default:
        metrics:
        - name: safety_vulnerabilities
          type: object
          help: Python Safety Vulnerabilities
          path: '{ .vulnerabilities.* }'
          labels:
            {{- .Values.jsonExporter.metricsLabels | nindent 12 }}
          values:
            severity: '{ .severity.cvssv3.base_score }'
            detected: 1
        - name: safety_vulnerabilities
          type: object
          help: Python Safety Vulnerabilities found
          path: '{ .report_meta }'
          values:
            found: '{ .vulnerabilities_found }'
